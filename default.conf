# Example reverse proxying based on original request IP
# For the list of all available options refer to the official 
# nginx documentation https://nginx.org/en/docs/
map $http_x_forwarded_for $bypass {
    # IMPORTANT: Dynamically generated list of matches for worker nodes
    # required in order to allow cross-node communication when PODs are 
    # referring to each other using routes (e.g. MAS Manage OIDC cookie
    # validation)
@BYPASSES@
    # FIXME: Specify aditional rules when reverse proxying should not
    # be activated, for example:
    # "10.45.131.14" true;
    # "~172\.30\.\d{1,3}\.\d{1,3}"  true;
}

@UPSTREAMS@ 

map $host$uri $backend {
@BACKENDS@
}

server {
    listen       8080;
    server_name  localhost;

    proxy_busy_buffers_size  512k;
    proxy_buffers         4  512k;
    proxy_buffer_size        256k;
    large_client_header_buffers    4    512k;

    location / {
        proxy_set_header Host $host;
        if ($bypass) {
          proxy_pass https://$backend$request_uri;
        }

        root   /usr/share/nginx/html;
        try_files $uri /maintenance.html;
    }

    location = /maintenance.html {
        internal;
        
        add_header "Cache-Control" "no-cache, no-store, must-revalidate";
        add_header "Pragma" "no-cache";
        add_header "Expires" "0";
        
        root   /usr/share/nginx/html;
    }
}
